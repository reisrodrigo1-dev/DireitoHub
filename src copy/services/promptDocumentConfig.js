// Configura√ß√£o de prompts que necessitam de documentos
// Baseado na an√°lise dos arquivos de prompt dispon√≠veis

export const DOCUMENT_REQUIRED_PROMPTS = {
  // Prompts que OBRIGATORIAMENTE precisam de documentos
  MANDATORY_DOCUMENT: [
    'analisar-laudos-medicos',
    'analisar-pec',
    'analisar-pec-defensoria', 
    'correcao-portugues',
    'corrigir-portugues-deixar-claro',
    'corrigir-portugues-mantendo-escrita',
    'depoimento-vitima-laudo-medico',
    'encontrar-contradicoes-testemunhas',
    'memoriais-ministerio-publico',
    'memoriais-civel-consumidor',
    'memoriais-criminais',
    'memoriais-previdenciarios',
    'memoriais-trabalhistas',
    'relatorio-criminal',
    'relatorio-contestacao-replica',
    'resumir-processos-criminais-defesa',
    'resumir-processos-familia-audiencias',
    'resumo-assistidos-dpe',
    'resumo-cliente',
    'vitima-depoimento',
    'preparacao-audiencia-trabalhista-reclamando',
    'preparacao-audiencia-trabalhista-reclamante',
    'acrescentar-argumentos',
    'rebater-argumentos',
    'maximizar-impacto-retorico',
    'ementa',
    'ementa-cnj',
    'dosimetria-pena',
    // NOVOS PROMPTS QUE PRECISAM DE DOCUMENTOS OBRIGATORIAMENTE
    'replica', // ‚Üê R√©plica precisa da contesta√ß√£o para rebater
    'contrarrazoes-civel-familia', // ‚Üê Precisa das raz√µes de apela√ß√£o
    'contrarrazoes-apelacao-criminal', // ‚Üê Precisa das raz√µes de apela√ß√£o
    'contrarrazoes-recurso-especial', // ‚Üê Precisa do recurso especial
    'contrarrazoes-recurso-extraordinario', // ‚Üê Precisa do recurso extraordin√°rio
    'razoes-rese', // ‚Üê Precisa do processo para fundamentar
    'despacho-judicial', // ‚Üê Precisa das peti√ß√µes para despachar
    'correicoes-e-sugestoes-pecas' // ‚Üê Precisa da pe√ßa para corrigir
  ],

  // Prompts que PODEM se beneficiar de documentos (opcionais)
  OPTIONAL_DOCUMENT: [
    'contestacao', // ‚Üê Pode ser baseada s√≥ nas informa√ß√µes ou com peti√ß√£o inicial
    'habeas-corpus', // ‚Üê Pode ser com ou sem documentos do processo
    'liberdade-provisoria', // ‚Üê Pode ser com ou sem autos
    'agravo-instrumento', // ‚Üê Pode ser com ou sem decis√£o agravada
    'apelacao-direito-privado', // ‚Üê Pode usar documentos do processo
    'apelacao-criminal', // ‚Üê Pode usar documentos do processo
    'apelacao-trabalhista', // ‚Üê Pode usar documentos do processo
    'inicial-alimentos', // ‚Üê Pode usar documentos comprobat√≥rios
    'quesitos', // ‚Üê Pode usar documentos do caso
    'projeto-lei', // ‚Üê Pode usar documentos de refer√™ncia
    'perguntas-parte-contraria-testemunhas' // ‚Üê Pode usar documentos do processo
  ],

  // Prompts que geralmente N√ÉO precisam de documentos
  NO_DOCUMENT_NEEDED: [
    'busca-jurisprudencia',
    'inserir-fundamentos-legais',
    'inserir-fundamentos-legais-cpc',
    'linguagem-simples',
    'localizador-endereco',
    'atualizar-valores-cc'
  ]
};

// Fun√ß√£o para verificar se um prompt necessita documento obrigatoriamente
export const requiresMandatoryDocument = (promptId, promptName) => {
  const id = (promptId || '').toLowerCase().replace(/\s+/g, '-');
  const name = (promptName || '').toLowerCase().replace(/\s+/g, '-');
  
  // Debug apenas se explicitamente habilitado
  if (window.DEBUG_PROMPTS) {
    console.log('üîç requiresMandatoryDocument:', { 
      originalId: promptId, 
      originalName: promptName, 
      processedId: id, 
      processedName: name 
    });
  }
  
  const result = DOCUMENT_REQUIRED_PROMPTS.MANDATORY_DOCUMENT.some(required => {
    const match = id.includes(required) || name.includes(required) || 
           required.includes(id) || required.includes(name);
    
    if (match && window.DEBUG_PROMPTS) {
      console.log(`‚úÖ MATCH encontrado: "${required}" com prompt ID: "${id}", Nome: "${name}"`);
    }
    
    return match;
  });
  
  if (window.DEBUG_PROMPTS) {
    console.log(`üìä Resultado final para "${promptName}" (${promptId}):`, result ? 'OBRIGAT√ìRIO' : 'N√ÉO OBRIGAT√ìRIO');
  }
  
  return result;
};

// Fun√ß√£o para verificar se um prompt pode se beneficiar de documentos
export const canBenefitFromDocument = (promptId, promptName) => {
  const id = (promptId || '').toLowerCase().replace(/\s+/g, '-');
  const name = (promptName || '').toLowerCase().replace(/\s+/g, '-');
  
  return DOCUMENT_REQUIRED_PROMPTS.OPTIONAL_DOCUMENT.some(optional => {
    return id.includes(optional) || name.includes(optional) || 
           optional.includes(id) || optional.includes(name);
  });
};

// Fun√ß√£o para gerar mensagem espec√≠fica baseada no tipo de prompt
export const getDocumentRequestMessage = (promptType) => {
  const promptName = promptType?.name || '';
  const promptId = (promptType?.id || '').toLowerCase();
  
  // Mensagens espec√≠ficas para diferentes tipos de documento
  if (promptId.includes('replica')) {
    return `üìù **ELABORA√á√ÉO DE R√âPLICA - FLUXO SEQUENCIAL**

Para elaborar uma r√©plica tecnicamente adequada e estruturada, preciso dos documentos processuais:

**üìã DOCUMENTOS OBRIGAT√ìRIOS:**
- Peti√ß√£o inicial completa
- Contesta√ß√£o da parte contr√°ria
- Documentos juntados pela defesa
- Provas e anexos relevantes ao processo

**‚öôÔ∏è PROCESSO ESTRUTURADO:**
O sistema seguir√° um fluxo sequencial obrigat√≥rio:
1. **I ‚Äì DO RELAT√ìRIO**
2. **II ‚Äì DOS PONTOS CONTROVERTIDOS** 
3. **III ‚Äì DA REFUTA√á√ÉO DOS ARGUMENTOS DA CONTESTA√á√ÉO** (m√≠n. 4.000 tokens)
4. **IV ‚Äì DOS PEDIDOS**

**üìÑ Formatos aceitos:** .txt, .docx, .pdf (m√°x. 10MB)

‚ö†Ô∏è **IMPORTANTE:** Este processo √© sequencial e controlado. Cada se√ß√£o ser√° elaborada ap√≥s sua confirma√ß√£o individual.

Anexe todos os documentos para iniciar o fluxo espec√≠fico da R√©plica.`;
  }

  if (promptId.includes('contrarrazoes')) {
    return `‚öñÔ∏è **Contrarraz√µes de Recurso**

Para elaborar contrarraz√µes consistentes, preciso do recurso da parte contr√°ria:

**Documentos necess√°rios:**
- Recurso (apela√ß√£o/especial/extraordin√°rio)
- Raz√µes de recurso
- Ac√≥rd√£o recorrido
- Documentos relevantes do processo

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe o recurso da parte contr√°ria para elaborar as contrarraz√µes.`;
  }

  if (promptId.includes('razoes-rese')) {
    return `üìã **Raz√µes de Recurso Especial**

Para fundamentar adequadamente o Recurso Especial, preciso dos documentos processuais:

**Documentos necess√°rios:**
- Ac√≥rd√£o recorrido
- Decis√µes de inst√¢ncias inferiores
- Jurisprud√™ncia divergente
- Legisla√ß√£o federal violada

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe os documentos para fundamentar o Recurso Especial.`;
  }

  if (promptId.includes('despacho-judicial')) {
    return `‚öñÔ∏è **Elabora√ß√£o de Despacho Judicial**

Para elaborar despacho adequado, preciso das peti√ß√µes e documentos:

**Documentos necess√°rios:**
- Peti√ß√µes das partes
- Documentos juntados
- Manifesta√ß√µes processuais
- Hist√≥rico do processo

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe as peti√ß√µes e documentos para elaborar o despacho.`;
  }

  if (promptId.includes('laudo') || promptId.includes('medico')) {
    return `üìã **An√°lise de Laudos M√©dicos**

Para realizar uma an√°lise completa e precisa dos laudos m√©dicos, preciso que voc√™ anexe:

**Documentos necess√°rios:**
- Laudo m√©dico pericial
- Exames complementares
- Relat√≥rios m√©dicos
- Documentos relacionados ao caso

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Por favor, anexe o documento para prosseguir com a an√°lise.`;
  }
  
  if (promptId.includes('pec')) {
    return `üìú **An√°lise de PEC (Proposta de Emenda Constitucional)**

Para analisar adequadamente a PEC, preciso do documento oficial:

**Documento necess√°rio:**
- Texto completo da PEC
- Justificativa da proposta
- Documentos complementares (se houver)

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe a PEC para realizar a an√°lise jur√≠dica detalhada.`;
  }
  
  if (promptId.includes('correcao') || promptId.includes('corrigir')) {
    return `‚úèÔ∏è **Corre√ß√£o de Texto Jur√≠dico**

Para corrigir e aprimorar seu texto, preciso do documento original:

**Documento necess√°rio:**
- Texto a ser corrigido
- Pe√ßa jur√≠dica
- Documento para revis√£o

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe o documento que deseja corrigir e aprimorar.`;
  }
  
  if (promptId.includes('memoriais')) {
    return `üìù **Elabora√ß√£o de Memoriais**

Para elaborar memoriais fundamentados, preciso dos documentos do processo:

**Documentos necess√°rios:**
- Peti√ß√£o inicial
- Contesta√ß√£o/Defesa
- Provas produzidas
- Decis√µes relevantes
- Documentos do processo

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe os documentos processuais para elabora√ß√£o dos memoriais.`;
  }
  
  if (promptId.includes('resumir') || promptId.includes('resumo')) {
    return `üìã **Resumo de Processos**

Para criar um resumo completo e √∫til, preciso dos documentos processuais:

**Documentos necess√°rios:**
- Pe√ßas principais do processo
- Decis√µes judiciais
- Documentos relevantes
- Hist√≥rico processual

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe os documentos do processo para gerar o resumo.`;
  }
  
  if (promptId.includes('relatorio')) {
    return `üìä **Elabora√ß√£o de Relat√≥rio**

Para elaborar um relat√≥rio detalhado, preciso dos documentos base:

**Documentos necess√°rios:**
- Documentos a serem analisados
- Pe√ßas processuais
- Provas e evid√™ncias
- Material de apoio

**Formatos aceitos:** .txt, .docx (m√°x. 10MB)

Anexe os documentos para elabora√ß√£o do relat√≥rio.`;
  }
  
  // Mensagem gen√©rica para outros tipos
  return `üìÑ **Documento Necess√°rio**

Para realizar ${promptName}, preciso que voc√™ anexe o documento que deve ser analisado.

**Tipos de arquivo aceitos:**
- Documentos de texto (.txt)
- Documentos Word (.docx)
- Tamanho m√°ximo: 10MB

Por favor, anexe o documento relacionado ao seu caso.`;
};

export default {
  DOCUMENT_REQUIRED_PROMPTS,
  requiresMandatoryDocument,
  canBenefitFromDocument,
  getDocumentRequestMessage
};
